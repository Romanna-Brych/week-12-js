{"version":3,"file":"page-3.js","sources":["../src/js/page-3.js"],"sourcesContent":["import axios from 'axios';\n\n// 2 Infinity scroll (https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst END_POINT = '/trending/movie/week';\n\nconst listEl = document.querySelector('.js-movie-list');\nconst guardEl = document.querySelector('.js-guard');\nlet page = 1;\n\nconst options = {\n  root: null,\n  scrollMargin: '0px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(handlePagination, options);\n\nasync function fetchMovie(page = 1) {\n  const { data } = await axios(`${BASE_URL}${END_POINT}`, {\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NzNkYTg1YjdiMTgwMTFkMDZmNDljMzVlMzJmNTBmYyIsIm5iZiI6MTc1ODgwNzcyNi44MzUsInN1YiI6IjY4ZDU0NmFlY2ZhMzk5YTdhMzg4NDY0ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HIH7WAO_7YA7uFw0JeN0tlufbUsG2iJbWO_w9tF8nU8',\n    },\n    params: {\n      page,\n    },\n  });\n\n  return data;\n}\n\nfetchMovie(page)\n  .then(data => {\n    console.log(data);\n    listEl.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n    if (data.page < data.total_pages) {\n      observer.observe(guardEl);\n    }\n  })\n  .catch(error => {\n    alert(error.message);\n  });\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, release_date, original_title, vote_average }) => `\n    <li class=\"movie-card\">\n    <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${original_title}\"/>\n    <div class=\"movie-info\">\n    <h2${original_title}h2>\n    <p>Release date: ${release_date}</p>\n    <p>Vote average: ${vote_average}</p>\n    </div>\n    </li>`\n    )\n    .join('');\n}\n\nfunction handlePagination(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n      try {\n        const data = await fetchMovie(page);\n        listEl.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n        if (data.page >= data.total_pages) {\n          observer.unobserve(guardEl);\n        }\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  });\n}\n"],"names":["BASE_URL","END_POINT","listEl","guardEl","page","options","observer","handlePagination","fetchMovie","data","axios","createMarkup","error","arr","poster_path","release_date","original_title","vote_average","entries","entry"],"mappings":"oFAGA,MAAMA,EAAW,+BACXC,EAAY,uBAEZC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAU,SAAS,cAAc,WAAW,EAClD,IAAIC,EAAO,EAEX,MAAMC,EAAU,CACd,KAAM,KACN,aAAc,MACd,UAAW,CACb,EAEMC,EAAW,IAAI,qBAAqBC,EAAkBF,CAAO,EAEnE,eAAeG,EAAWJ,EAAO,EAAG,CAClC,KAAM,CAAE,KAAAK,CAAM,EAAG,MAAMC,EAAM,GAAGV,CAAQ,GAAGC,CAAS,GAAI,CACtD,QAAS,CACP,OAAQ,mBACR,cACE,wPACH,EACD,OAAQ,CACN,KAAAG,CACD,CACL,CAAG,EAED,OAAOK,CACT,CAEAD,EAAWJ,CAAI,EACZ,KAAKK,GAAQ,CACZ,QAAQ,IAAIA,CAAI,EAChBP,EAAO,mBAAmB,YAAaS,EAAaF,EAAK,OAAO,CAAC,EAE7DA,EAAK,KAAOA,EAAK,aACnBH,EAAS,QAAQH,CAAO,CAE9B,CAAG,EACA,MAAMS,GAAS,CACd,MAAMA,EAAM,OAAO,CACvB,CAAG,EAEH,SAASD,EAAaE,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CAAE,YAAAC,EAAa,aAAAC,EAAc,eAAAC,EAAgB,aAAAC,CAAc,IAAK;AAAA;AAAA,+CAExBH,CAAW,UAAUE,CAAc;AAAA;AAAA,SAEzEA,CAAc;AAAA,uBACAD,CAAY;AAAA,uBACZE,CAAY;AAAA;AAAA,UAG9B,EACA,KAAK,EAAE,CACZ,CAEA,SAASV,EAAiBW,EAASZ,EAAU,CAC3CY,EAAQ,QAAQ,MAAMC,GAAS,CAC7B,GAAIA,EAAM,eAAgB,CACxBf,GAAQ,EACR,GAAI,CACF,MAAMK,EAAO,MAAMD,EAAWJ,CAAI,EAClCF,EAAO,mBAAmB,YAAaS,EAAaF,EAAK,OAAO,CAAC,EAE7DA,EAAK,MAAQA,EAAK,aACpBH,EAAS,UAAUH,CAAO,CAE7B,OAAQS,EAAO,CACd,MAAMA,EAAM,OAAO,CACpB,CACF,CACL,CAAG,CACH"}